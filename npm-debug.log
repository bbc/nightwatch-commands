0 info it worked if it ends with ok
1 verbose cli [ '/Users/duckwg01/.nvm/versions/node/v5.6.0/bin/node',
1 verbose cli   '/Users/duckwg01/.nvm/versions/node/v5.6.0/bin/npm',
1 verbose cli   'publish' ]
2 info using npm@3.6.0
3 info using node@v5.6.0
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/duckwg01/Github/nightwatch-commands',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/duckwg01/.npm/nightwatch-commands/1.0.0/package.tgz not in flight; packing
9 verbose correctMkdir /Users/duckwg01/.npm correctMkdir not in flight; initializing
10 info lifecycle nightwatch-commands@1.0.0~prepublish: nightwatch-commands@1.0.0
11 silly lifecycle nightwatch-commands@1.0.0~prepublish: no script for prepublish, continuing
12 verbose tar pack [ '/Users/duckwg01/.npm/nightwatch-commands/1.0.0/package.tgz',
12 verbose tar pack   '/Users/duckwg01/Github/nightwatch-commands' ]
13 verbose tarball /Users/duckwg01/.npm/nightwatch-commands/1.0.0/package.tgz
14 verbose folder /Users/duckwg01/Github/nightwatch-commands
15 verbose addLocalTarball adding from inside cache /Users/duckwg01/.npm/nightwatch-commands/1.0.0/package.tgz
16 verbose correctMkdir /Users/duckwg01/.npm correctMkdir not in flight; initializing
17 silly cache afterAdd nightwatch-commands@1.0.0
18 verbose afterAdd /Users/duckwg01/.npm/nightwatch-commands/1.0.0/package/package.json not in flight; writing
19 verbose correctMkdir /Users/duckwg01/.npm correctMkdir not in flight; initializing
20 verbose afterAdd /Users/duckwg01/.npm/nightwatch-commands/1.0.0/package/package.json written
21 silly publish { name: 'nightwatch-commands',
21 silly publish   version: '1.0.0',
21 silly publish   description: 'Basic Nightwatch Commands',
21 silly publish   license: 'MIT',
21 silly publish   homepage: 'https://github.com/bbc/nightwatch-commands',
21 silly publish   repository:
21 silly publish    { type: 'git',
21 silly publish      url: 'git+https://github.com/bbc/nightwatch-commands.git' },
21 silly publish   types: 'index',
21 silly publish   readme: '# Keywords \n\n* [elementCount](#elementcount)\n* [getVersionNumbers](#getversionnumbers)\n* [screenSize](#screensize)\n* [setCheckbox](#setcheckbox)\n* [setDropdown](#setdropdown)\n\n## getVersionNumbers\n\n### Purpose\n\nThis extracts the version number of a product from the HTML source\n\n### Parameters\n\nThe ```getVersionNumber([\'productName\'])``` keyword accepts an array of productNames such as ```orbit``` or ```searchbox-app```.\n\n### How it works\n\nIt reads in the HTML source of a page and then parses it to look for the ```productName``` which is of the format ```productName/xx.yy.zz```. Where ```xx.yy.zz``` are the version numbers.\n\n### Example\n\n```\nbrowser.page.<page>.getVersionNumbers([\'productName\']);\n```\n\n## screenSize\n\n### Purpose\n\nThis provides a way of us getting the width of the browser window so we can vary the assertions in a test accordingly. For example the layout of modules is different at different screen widths.\n\nThe nightwatch supported way for getting the screen width does not work on Firefox, or the iPhone. This function provides an alternate way of doing this.\n\n### How it works\n\nIt runs some javascript in the browser which returns the width of the browser window, and returns it in the callback.\n\n### Example\n\n```\nbrowser.screenSize(function (screenSize) {\n  if (screenSize >= 600) {\n    // verify something on a large screen \n  } else {\n    // verify something on a small screen \n  }\n});\n```\n\n## setCheckbox\n\n### Purpose\n\nThis provides a way of setting a checkbox to either true/false regardless of it\'s current state\n\n### Parameters\n\n* The ```setCheckbox(locateStrategy, selector, value)``` keyword has three required parameters:\n  * ```locateStrategy``` - can be something like ```css selector``` or ```xpath``` and is based on the selector\n  * ```selector``` - is way in which we identify the element \n  * ```value``` - this can either be ```true``` or ```false``` depending on whether we want it checked or not\n\n### How it works\n\nIt checks the current value of the checkbox and if it does not match the value given then it will change it to be the correct value, however if it is the correct value then it will carry on without changing anything.\n\n### Example\n\n```\nbrowser.page.object.setCheckbox(\'css selector\', \'[name="fig_uk"]\', true)\n```\n\n## setDropdown\n\n### Purpose\n\nThis provides a way of setting a select dropdown option\n\n### Parameters\n\n* The ```setDropdown(selector, value)``` keyword has two required parameters:\n  * ```selector``` - is way in which we identify the element \n  * ```value``` - is the value which is provided inside the ```<option value="XXX">```\n\n### How it works\n\nIt clicks the dropdown menu to show the options and then selects the appropriate value\n\n### Example\n\n```\nbrowser.page.object.setDropdown(\'bodyColor\', \'#77BC30\')\n```',
21 silly publish   readmeFilename: 'README.md',
21 silly publish   gitHead: '1252bdc2372c94908bb1ae61ab6c9c67ca0e8fb6',
21 silly publish   bugs: { url: 'https://github.com/bbc/nightwatch-commands/issues' },
21 silly publish   _id: 'nightwatch-commands@1.0.0',
21 silly publish   scripts: {},
21 silly publish   _shasum: '55fdb1cecdaf21addd9eb6ff9defe55ffc3e26dd',
21 silly publish   _from: '.' }
22 verbose getPublishConfig undefined
23 silly mapToRegistry name nightwatch-commands
24 silly mapToRegistry using default registry
25 silly mapToRegistry registry http://registry.npmjs.org/
26 silly mapToRegistry uri http://registry.npmjs.org/nightwatch-commands
27 verbose publish registryBase http://registry.npmjs.org/
28 silly publish uploading /Users/duckwg01/.npm/nightwatch-commands/1.0.0/package.tgz
29 verbose request uri http://registry.npmjs.org/nightwatch-commands
30 verbose request sending authorization for write operation
31 info attempt registry request try #1 at 7:10:28 PM
32 verbose request using bearer token for auth
33 verbose request id db636d5323eb2eaa
34 http request PUT http://registry.npmjs.org/nightwatch-commands
35 http 403 http://registry.npmjs.org/nightwatch-commands
36 verbose headers { date: 'Fri, 06 Jul 2018 18:10:30 GMT',
36 verbose headers   'content-type': 'application/json',
36 verbose headers   'transfer-encoding': 'chunked',
36 verbose headers   connection: 'keep-alive',
36 verbose headers   'set-cookie': [ '__cfduid=d2823a8b85a7bf4df59e3b8d910843b041530900629; expires=Sat, 06-Jul-19 18:10:29 GMT; path=/; domain=.registry.npmjs.org; HttpOnly' ],
36 verbose headers   'cf-ray': '43640745b02235ea-LHR',
36 verbose headers   'expect-ct': 'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"',
36 verbose headers   server: 'cloudflare',
36 verbose headers   'content-encoding': 'gzip' }
37 verbose request invalidating /Users/duckwg01/.npm/registry.npmjs.org/nightwatch-commands on PUT
38 error publish Failed PUT 403
39 verbose stack Error: You do not have permission to publish "nightwatch-commands". Are you logged in as the correct user? : nightwatch-commands
39 verbose stack     at makeError (/Users/duckwg01/.nvm/versions/node/v5.6.0/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:264:12)
39 verbose stack     at CachingRegistryClient.<anonymous> (/Users/duckwg01/.nvm/versions/node/v5.6.0/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:252:14)
39 verbose stack     at /Users/duckwg01/.nvm/versions/node/v5.6.0/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:178:7
39 verbose stack     at Gunzip.onEnd (zlib.js:227:5)
39 verbose stack     at emitNone (events.js:85:20)
39 verbose stack     at Gunzip.emit (events.js:179:7)
39 verbose stack     at endReadableNT (_stream_readable.js:906:12)
39 verbose stack     at nextTickCallbackWith2Args (node.js:475:9)
39 verbose stack     at process._tickCallback (node.js:389:17)
40 verbose statusCode 403
41 verbose pkgid nightwatch-commands
42 verbose cwd /Users/duckwg01/Github/nightwatch-commands
43 error Darwin 16.7.0
44 error argv "/Users/duckwg01/.nvm/versions/node/v5.6.0/bin/node" "/Users/duckwg01/.nvm/versions/node/v5.6.0/bin/npm" "publish"
45 error node v5.6.0
46 error npm  v3.6.0
47 error code E403
48 error You do not have permission to publish "nightwatch-commands". Are you logged in as the correct user? : nightwatch-commands
49 error If you need help, you may report this error at:
49 error     <https://github.com/npm/npm/issues>
50 verbose exit [ 1, true ]
